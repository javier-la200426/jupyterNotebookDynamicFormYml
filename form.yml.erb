---

cluster: "pax"

bc_dynamic_js: true

<%= ERB.new(File.read(File.expand_path('partials/gpu_discovery.erb', __dir__))).result(binding) %>

attributes:
  notice:
    widget: "text_field"
    label: ""
    value: ""
    help: |
      <div class="alert alert-warning" role="alert">
        <strong>Important: Upcoming resource limits</strong><br/>
        From 10/02/2025, the following resource limit (maximum simultaneous resource allocation) will be applied to all early adopters:
        <ul style="margin: 0.5rem 0 0 1.25rem;">
          <li>CPU: 32</li>
          <li>CPU Memory: 256GB</li>
          <li>GPU: 2</li>
          <li>Maximum Job Timelimit: 48 hours</li>
        </ul>
      </div>
    html_options:
      style: "display:none"
  conda_extensions: "0"

  extra_jupyter_args: ""

#optional debug log
<%
begin
  debug_log = File.join(ENV['HOME'], 'javi_gpu_debug.log')
  File.open(debug_log, 'a') do |f|
    f.puts "=== #{Time.now} ==="
    f.puts "PATH=#{ENV['PATH']}"
    f.puts "nodes_out_bytes=#{@nodes_out&.bytesize}"
    f.puts "detected_types=#{@detected_types.to_a.inspect}"
    f.puts "a100_sizes=#{@a100_sizes.to_a.inspect}"
    f.puts "options=#{@options.inspect}"
    f.puts "partitions_seen=#{@all_partitions.inspect}"
    f.puts "partition_options_map_keys=#{@partition_options_map.keys.inspect}"
    f.puts "max_cores_by_partition_and_gpu=#{@max_cores_by_partition_and_gpu.inspect}"
    f.puts "global_max_cores=#{@global_max_cores}"
    f.puts "max_memory_by_partition_and_gpu=#{@max_memory_by_partition_and_gpu.inspect}"
    f.puts "global_max_memory=#{@global_max_memory}"
    f.puts "max_hours_by_partition=#{@max_hours_by_partition.inspect}"
    f.puts "global_max_hours=#{@global_max_hours}"
    f.puts "unavailable_gpu_types=#{@unavailable_gpu_types.to_a.inspect}"
    f.puts "gpu_type_node_states=#{@gpu_type_node_states.inspect}"
  end
rescue => e
  # swallow logging errors so the form still renders
end
%>
<%= File.read("/etc/ood/config/apps/dashboard/batch_connect/partials/all_partition.yml").indent(2) %>

<%= generate_num_cores_field.indent(2) %>
<%= generate_num_memory_field.indent(2) %>
<%= generate_gpu_type_field.indent(2) %>
<%= generate_num_hours_field.indent(2) %>
    
  working_directory:
    widget: "text_field"
    label: "Top working directory"
    help: Top working directory for your Jupyter session to access your notebooks and data. Default is your **$HOME**.
    
  mode:
    widget: "radio"
    label: "Jupyter Lab or Notebook?"
    value: "1"
    options:
      - ["Jupyter Lab", "1"]
      - ["Jupyter Notebook", "0"]

  module:
    widget: text_field
    label: "Load supporting modules"
    help: ENTER module name **ONLY**. e.g. for "module load cuda/12.9" in command line, ENTER **cuda/12.2**


form:
  - notice
  - conda_extensions
  - extra_jupyter_args
  - mode
  - partition
  - bc_num_hours
  - gpu_type
  - num_cores
  - num_memory
  - working_directory
  - module

